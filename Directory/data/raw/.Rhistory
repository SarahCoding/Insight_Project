datalist[1]
for (i in datalist){
datalist[i]
}
for (i in datalist){
print datalist[i]
}
datalist
length(datalist)
datalist[2]
d2=datalist[2]
View(datalist)
View(d2)
datalist = lapply(filenames, function(x){d=read.csv(file=x,header=T, skip=3)})
View(datalist)
d1=datalist[[1]]
View(d1)
d2=datalist[[2]]
View(d2)
datalist = lapply(filenames, function(x){d=read.csv(file=x,header=T)})
d1=datalist[[1]]
d2=datalist[[2]]
dataframes=lapply(datalist, function(x){datalist[[x]]})
dataframes=lapply(datalist, function(x){data.frame[[x]]})
library(dplyr)
bind_rows(datalist, .id = [1])
bind_rows(datalist, .id="State")
df=bind_rows(datalist, .id="State")
View(datalist)
View(df)
d1=datalist[[1]]
d2=datalist[[2]]
d3=datalist[[3]]
assign(paste("d", i, sep = ""), i)=d[[i]]
for (i in length(datalist)){
assign(paste("d", i, sep = ""), i)=d[[i]]
}
for (i in length(datalist)){
assign(paste("d", i, sep = ""), i)
}
datalist = lapply(filenames, function(x){d=read.csv(file=x,header=F)})
ls()
for(i in 1:length(datalist)){
assign(paste("d", i, sep = ""), i)
}
for(i in 1:length(datalist)){
assign(paste("d", i, sep = ""), i)=d[[i]]
}
for(i in 1:length(datalist)){
assign(paste("d", i, sep = ""), d[[i]])
}
d1
assign(paste("d", i, sep = ""), as.data.frame(d[[i]])
}
ls()
d1=datalist[[1]]
d2=datalist[[2]]
d3=datalist[[3]]
df=bind_rows(datalist, .id="State")
headers = read.csv(file, skip = 1, header = F, nrows = 1, as.is = T)
df = read.csv(file, skip = 3, header = F)
colnames(df)= headers
colnames(df)[1]="State"
colnames()
grep("State", headers)
setwd(rawdatapath)
clean= function(data.entry){}
multmerge = function(mypath){
filenames=list.files(path=mypath, full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T, skip=3)})
Reduce(function(x,y) {merge(x,y)}, datalist)
}
d=multmerge(mypath = rawdatapath)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
merge.data.frame(datalist, by.x = "State")
for(i in 1:length(datalist)){
assign(paste("d", i, sep = ""), as.data.frame(d[[i]]))
}
View(d)
for(i in 1:length(datalist)){
name=(paste("d", i, sep = ""))
assign(name, d[[i]])
}
d1
View(d1)
dataframes=lapply(datalist, function(x){assign(name(paste("d")))})
dataframes=lapply(datalist, function(x){assign(assign(paste("d",sep=""), x))})
datalist = lapply(filenames, function(df){d=read.csv(file=df,header=F)})
dataframes=lapply(datalist, function(df){assign(assign(paste("d",sep=""), df))})
name_df_func <- function(df) {
df_name <- as.name(paste0("df", df))
bquote(.(df_name) <- .(df_name)[ , 1:2])
}
for(i in 1:length(datalist))eval(name_df_func(i))
datalist[[1]][["State"]]
datalist[[1]]
datalist[[1]][[1]]
for (i in 1:length(datalist)) {
print datalist[[i]][[i]]
}
print hi
print 'hi'
print "hi"
print("hi")
for (i in 1:length(datalist)) {
}
for (i in 1:length(datalist)) {
}
for (i in 1:length(datalist)) {
print(datalist[[i]][[i]])
}
for (i in 1:length(datalist)) {
print[i]
print(datalist[[i]][[i]])
}
for (i in 1:length(datalist)) {
print([i])
print(datalist[[i]][[i]])
}
datalist[[1]][[1]]
for (i in 1:length(datalist)) {
print(i)
print(datalist[[i]][[i]])
}
for (i in 1:length(datalist)) {
print(i)
print(datalist[[i]][[1]])
}
datalist[[1]][[1]]
datalist[[1]][[1]][[1]]
datalist[[1]][[1]][[1]]=="State"
for (i in 1:length(datalist)) {
print(i)
datalist[[i]][[1]][[1]]=="State"
}
datalist[[1]][[1]][[1]]=="State"
for (i in 1:length(datalist)) {
print(i)
print(datalist[[i]][[1]][[1]]=="State")
}
for (i in 1:length(datalist)) {
print(i, datalist[[i]][[1]][[1]]=="State")
}
for (i in 1:length(datalist)) {
print(i)
print(datalist[[i]][[1]][[1]]=="State")
}
d=datalist[[1]]
View(d)
big_data = do.call(rbind, datalist)
big_data = do.call(cbind, datalist)
for (i in 1:2){
print(df$i)
}
for (i in 1:2){
df$i
}
for (i in 1:length(datalist)) {
print(i)
if (datalist[[i]][[1]][[1]]=="State"){
headers = read.csv(datalist[[i]], skip = 1, header = F, nrows = 1, as.is = T)
df$i = read.csv(datalist[[i]], skip = 3, header = F)
colnames(df)= headers
colnames(df)[1]="State"
colnames()
}
}
for (i in 1:length(datalist)) {
print(i)
if (datalist[[i]][[1]][[1]]=="State"){
headers = read.csv(as.data.frame(datalist[[i]]), skip = 1, header = F, nrows = 1, as.is = T)
df = read.csv(datalist[[i]], skip = 3, header = F)
colnames(df)= headers
colnames(df)[1]="State"
colnames()
}
}
d=as.data.frame(datalist[[1]])
d
datalist.df = lapply(datalist, function(df){d=as.data.frame(df)})
datalist
View(datalist)
View(datalist.df)
#loading data to merge
rawdatapath="C:/Users/sarah/Dropbox/Insight_fellowship/Project/Directory/data/raw"
#loading data to merge
rawdatapath=name("C:/Users/sarah/Dropbox/Insight_fellowship/Project/Directory/data/raw")
#loading data to merge
rawpath="C:/Users/sarah/Dropbox/Insight_fellowship/Project/Directory/data/raw"
#loading data to merge
rawpath="C:/Users/sarah/Dropbox/Insight_fellowship/Project/Directory/data/raw"
filenames=list.files(path=rawpath=TRUE)
filenames=list.files(path=rawpath, full.names=TRUE)
datalist = lapply(filenames, function(df){d=read.csv(file=df,header=F)})
datalist.df = lapply(datalist, function(df){d=as.data.frame(df)})
rm(datalist.df)
datalist.df = lapply(datalist, function(df){d=as.data.frame(df)})
View(datalist.df)
View(datalist)
datalist = lapply(filenames, function(df){d=read.csv(file=df,header=T)})
View(datalist)
rm(datalist.df)
filenames=list.files(path=r, full.names=TRUE)
filenames=list.files(path=r, full.names=TRUE)
#loading data to merge
rawpath="C:/Users/sarah/Dropbox/Insight_fellowship/Project/Directory/data/raw"
filenames=list.files(path=r, full.names=TRUE)
filenames=list.files(path=rawpath, full.names=TRUE)
datalist = lapply(filenames, function(df){d=read.csv(file=df,header=T)})
View(datalist)
View(datalist[[1]])
name_df_func <- function(df) {
df_name <- as.name(paste0("df", df))
bquote(.(df_name) <- .(df_name)[ , 1:2])
}
filenames
datalist.label=lapply(datalist, function(df){df$year="2000"})
View(datalist.label)
#Explore the data
d_08_gen=datalist[[1]]
View(d_08_gen)
#Explore the data
d_08_gen=datalist[[1]]
d_08_pri=datalist[[2]]
d_10_gen=datalist[[3]]
d_12_pri=datalist[[5]]
d_12_gen=datalist[[4]]
d_14_gen=datalist[[6]]
d_16_gen=datalist[[7]]
d_16_pri=datalist[[8]]
d_18_gen=datalist[[9]]
#Trying to see whether "State" is correctly labeled
for (i in 1:length(datalist)) {
print(i)
(as.data.framedatalist[[i]][[1]][[1]]=="State")
}
#Trying to see whether "State" is correctly labeled
for (i in 1:length(datalist)) {
print(i)
print(as.data.framedatalist[[i]][[1]][[1]]=="State")
}
#Trying to see whether "State" is correctly labeled
for (i in 1:length(datalist)) {
print(i)
print(datalist[[i]][[1]][[1]]=="State")
}
#Trying to see whether "State" is correctly labeled
for (i in 1:length(datalist)) {
print(i)
print(datalist[[i]][[1]][[1]]=="State")
}
filenames=list.files(path=rawpath, full.names=TRUE)
datalist = lapply(filenames, function(df){d=read.csv(file=df,header=T)})
View(datalist)
View(d_08_gen)
#Trying to see whether "State" is correctly labeled
for (i in 1:length(datalist)) {
print(i)
print(datalist[[i]][[1]]=="State")
}
colname(d_08_gen)
colnames(d_08_gen)
#Trying to see whether "State" is correctly labeled
for (i in 1:length(datalist)) {
print(i)
print(colname(datalist[[i]][1])=="State")
}
#Trying to see whether "State" is correctly labeled
for (i in 1:length(datalist)) {
print(i)
print(colnames(datalist[[i]][1])=="State")
}
#Some plots
hist(d_08_gen)
headers = read.csv(d_08_gen, skip = 1, header = F, nrows = 1, as.is = T)
View(d_08_gen)
filenames[1]
headers = read.csv(filenames[1], skip = 1, header = F, nrows = 1, as.is = T)
d_08_gen = read.csv(filenames[1], skip = 3, header = F)
colnames(d_08_gen)= headers
colnames(d_08_gen)[1]="State"
colnames()
colnames(d_08_gen)
#Some plots
hist(d_08_gen$State)
#Some plots
hist(d_08_gen$`VEP Total Ballots Counted`)
d_08_gen$`VEP Total Ballots Counted`
headers = as.data.frame(read.csv(filenames[1], skip = 1, header = F, nrows = 1, as.is = T))
d_08_gen = as.data.frame(read.csv(filenames[1], skip = 3, header = F))
colnames(d_08_gen)= headers
colnames(d_08_gen)[1]="State"
colnames(d_08_gen)
#Some plots
hist(d_08_gen$`VEP Total Ballots Counted`)
d_08_gen
#Some plots
hist(d_08_gen$`VEP Total Ballots Counted)
)
)
#Some plots
hist(d_08_gen$VEP Total Ballots Counted)
#Some plots
hist(d_08_gen$"VEP Total Ballots Counted")
#Some plots
hist(as.numeric(d_08_gen$"VEP Total Ballots Counted")
)
#Some plots
plot(d_08_gen$"State"~as.numeric(d_08_gen$"VEP Total Ballots Counted"))
#Some plots
plot(as.numeric(d_08_gen$"VEP Total Ballots Counted"~d_08_gen$"State"))
#Some plots
plot(as.numeric(d_08_gen$"VEP Total Ballots Counted")~d_08_gen$"State")
#Some plots
lineplot(as.numeric(d_08_gen$"VEP Total Ballots Counted")~d_08_gen$"State")
#Some plots
plot(as.numeric(d_08_gen$"VEP Total Ballots Counted")~d_08_gen$"State")
library(ggplot2)
#Some plots
ggplot(as.numeric(d_08_gen$"VEP Total Ballots Counted")~d_08_gen$"State")
View(d_08_gen)
View(datalist)
#Some plots
ggplot(data = d_08_gen, aes(x="State", y="VEP Total Ballots Counted"))
#Some plots
as.numeric(d_08_gen$"VEP Total Ballots Counted")
#Some plots
d_08_gen$VEPTotalBallotsCounted=as.numeric(d_08_gen$"VEP Total Ballots Counted")
#Some plots
d_08_gen$VEPTotalBallotsCounted=as.numeric(as.string(d_08_gen$"VEP Total Ballots Counted"))
as.string(d_08_gen$"VEP Total Ballots Counted")
#Some plots
d_08_gen$VEPTotalBallotsCounted=as.numeric(as.character(d_08_gen$"VEP Total Ballots Counted"))
as.character(d_08_gen$"VEP Total Ballots Counted")
#Some plots
d_08_gen$VEPTotalBallotsCounted=as.character(d_08_gen$"VEP Total Ballots Counted")
ggplot(data = d_08_gen, aes(x="State", y=VEPTotalBallotsCounted))
ggplot(data = d_08_gen, aes(x="State", y=VEPTotalBallotsCounted))+
geom_point(aes(colour=blue), cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x="State", y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)
d_08_gen$State=as.character(d_08_gen$State)
ggplot(data = d_08_gen, aes(x="State", y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x="State", y=VEPTotalBallotsCounted))+
geom_line(cex=2, alpha=0.75)
d_08_gen$State
ggplot(data = d_08_gen, aes(x="State", y=VEPTotalBallotsCounted))+
geom_hist(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x="State", y=VEPTotalBallotsCounted))+
geom_hist(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x="State", y=VEPTotalBallotsCounted))+
geom_histogram(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x="State"))+
geom_histogram(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x="State"))+
geom_histogram(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x="State"))+
geom_count(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x="State", y="VEPTotalBallotsCounted"))+
geom_count(cex=2, alpha=0.75)
plot(d_08_gen$VEPTotalBallotsCounted)
histplot(d_08_gen$VEPTotalBallotsCounted)
hist(d_08_gen$VEPTotalBallotsCounted)
State)
hist(d_08_gen$State)
#Some plots
d_08_gen$VEPTotalBallotsCounted=as.numeric(as.character(d_08_gen$"VEP Total Ballots Counted"))
d_08_gen$VEPTotalBallotsCounted=as.character(d_08_gen$"VEP Total Ballots Counted")
#Some plots
as.numeric(sub("%","",d_08_gen$VEPTotalBallotsCounted))/100
d_08_gen$VEPTotalBallotsCounted=as.numeric(sub("%","", as.character(d_08_gen$"VEP Total Ballots Counted"))/100
d_08_gen$State=as.character(d_08_gen$State)
hist(d_08_gen$State)
ggplot(data = d_08_gen, aes(x="State", y="VEPTotalBallotsCounted"))+
geom_count(cex=2, alpha=0.75)
as.numeric(d_08_gen$"VEP Total Ballots Counted")~d_08_gen$"State")
d_08_gen$VEPTotalBallotsCounted=as.numeric(sub("%","", as.character(d_08_gen$"VEP Total Ballots Counted"))/100
d_08_gen$State=as.character(d_08_gen$State)
hist(d_08_gen$State)
ggplot(data = d_08_gen, aes(x="State", y="VEPTotalBallotsCounted"))+
geom_count(cex=2, alpha=0.75)
as.numeric(d_08_gen$"VEP Total Ballots Counted")~d_08_gen$"State")
d_08_gen$VEPTotalBallotsCounted=as.numeric(sub("%","", as.character(d_08_gen$"VEP Total Ballots Counted"))/100
d_08_gen$State=as.character(d_08_gen$State)
hist(d_08_gen$State)
ggplot(data = d_08_gen, aes(x="State", y="VEPTotalBallotsCounted"))+
geom_count(cex=2, alpha=0.75)
as.numeric(d_08_gen$"VEP Total Ballots Counted")~d_08_gen$"State")
d_08_gen$VEPTotalBallotsCounted=as.numeric(sub("%","", as.character(d_08_gen$"VEP Total Ballots Counted"))/100
d_08_gen$VEPTotalBallotsCounted=as.numeric(sub("%","", as.character(d_08_gen$"VEP Total Ballots Counted")/100)
d_08_gen$State=as.character(d_08_gen$State)
hist(d_08_gen$State)
ggplot(data = d_08_gen, aes(x="State", y="VEPTotalBallotsCounted"))+
geom_count(cex=2, alpha=0.75)
as.numeric(d_08_gen$"VEP Total Ballots Counted")~d_08_gen$"State")
d_08_gen$VEPTotalBallotsCounted=as.numeric(sub("%","", as.character(d_08_gen$"VEP Total Ballots Counted")/100))
d_08_gen$VEPTotalBallotsCounted=as.character(d_08_gen$"VEP Total Ballots Counted")/100)
d_08_gen$VEPTotalBallotsCounted=as.character(d_08_gen$"VEP Total Ballots Counted")/100
d_08_gen$VEPTotalBallotsCounted=as.character(d_08_gen$"VEP Total Ballots Counted")
d_08_gen$VEPTotalBallotsCounted=as.numeric(sub("%","",d_08_gen$VEPTotalBallotsCounted))/100
plot(d_08_gen$VEPTotalBallotsCounted)
hist(d_08_gen$VEPTotalBallotsCounted)
ggplot(data = d_08_gen, aes(x="State", y="VEPTotalBallotsCounted"))+
geom_count(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x="State", y=VEPTotalBallotsCounted))+
geom_count(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_count(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_line(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_line(cex=2, alpha=0.75)
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)
View(datalist)
View(datalist.label)
View(datalist)
View(filenames)
filenames
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)+
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))+
labs( y="Votes Counted ", x="States")+
plot_L_DBP_1=ggplot(data=plot_L_DBP.m,aes(x=reDBP, y=value)) +
geom_point(aes(colour=variable), cex=2, alpha=0.75)+
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))+
labs( y="Left Insular Pulsatility ", x="Diastolic Blood Pressure")+
theme(panel.grid.major = element_line(colour = "gray95"), panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.position="bottom")+
scale_color_manual(values=c("green4", "skyblue2", "firebrick1"))+
geom_smooth(method='lm', size=0.5, level=0.90, color="green4", alpha= 0.1, data=plot_L_DBP.cc, aes(x=reDBP, y=echo1_insu_L))
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)+
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))+
labs( y="Votes Counted ", x="States")
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)+
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))+
labs( y="Votes Counted ", x="States")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)+
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))+
labs( y="% Votes Counted ", x="States")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
d_08_gen$VEPTotalBallotsCounted=as.numeric(sub("%","",d_08_gen$VEPTotalBallotsCounted))
View(d_08_gen)
d_08_gen$VEPTotalBallotsCounted=as.character(d_08_gen$"VEP Total Ballots Counted")
d_08_gen$VEPTotalBallotsCounted=as.numeric(sub("%","",d_08_gen$VEPTotalBallotsCounted))
d_08_gen$VEPTotalBallotsCounted
hist(d_08_gen$VEPTotalBallotsCounted)
d_08_gen$State=as.character(d_08_gen$State)
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)+
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))+
labs( y="% Votes Counted ", x="States")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)+
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))+
labs( y="% Votes Counted ", x="States")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
theme(panel.grid.major = element_line(colour = "gray95"), panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.position="bottom")+
as.numeric(d_08_gen$"VEP Total Ballots Counted")~d_08_gen$"State")
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)+
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))+
labs( y="% Votes Counted ", x="States")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
theme(panel.grid.major = element_line(colour = "gray95"), panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
as.numeric(d_08_gen$"VEP Total Ballots Counted")~d_08_gen$"State")
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)+
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))+
labs( y="% Votes Counted ", x="States")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
theme(panel.grid.major = element_line(colour = "gray95"), panel.background = element_blank())
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)+
geom_abline()
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)+
geom_line(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
geom_point(cex=2, alpha=0.75)+
geom_line(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))+
labs( y="% Votes Counted ", x="States")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
theme(panel.grid.major = element_line(colour = "gray95"), panel.background = element_blank())
geom_line(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))
ggplot(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
#geom_point(cex=2, alpha=0.75)+
geom_line(data = d_08_gen, aes(x=State, y=VEPTotalBallotsCounted))+
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))+
labs( y="% Votes Counted ", x="States")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
theme(panel.grid.major = element_line(colour = "gray95"), panel.background = element_blank())
